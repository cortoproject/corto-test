#package corto/test

procedure Case: procedureKind::METHOD, base = method

void fail(string err)
bool assert(bool condition, $condition, $__line)
bool assertstr(string s1, string s2, $s1, $s2, $__line)
bool assertint(uint64 i1, uint64 i2, $i1, $i2, $__line)
bool assertEqual(any a, any b, $a, $b, $__line)
void setTimeout(uint32 sec)

struct Result::
    member success: bool, readonly
    member errmsg: string

class SuiteData::
    member testcase: test/Case, readonly
    member assertCount: uint32
    member result: test::Result, readonly
    member timeout: uint32, readonly
    int16 construct()
    void setup() virtual
    void teardown() virtual
    int16 run(test/Case testcase)

class Suite{class, defaultType=member, defaultProcedureType=test/Case}::
    int16 construct()

class Runner::
    member name: string
    member lib: string
    member testcase: string
    member successes: list{test/Case}, readonly
    member failures: list{test/Case}, readonly
    member testsRun: int32, readonly
    member timer: core/time, readonly
    int16 construct()
    void destruct()
    void runTest(object observable) observer
